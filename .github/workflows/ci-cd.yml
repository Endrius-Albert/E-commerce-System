name: E-commerce CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: ecommerce
      MYSQL_PASSWORD: 36513411
      MYSQL_ROOT_PASSWORD: rootpassword
      DB_NAME: ecommerce_db
      K3D_CLUSTER_NAME: ecommerce-cluster

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build WAR with Ant
        run: ant war

      - name: Build Docker image
        run: docker build -t ecommerce-backend:latest .

      - name: Install K3d
        run: |
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
          k3d --version

      - name: Create K3d cluster
        run: k3d cluster create $K3D_CLUSTER_NAME --wait

      - name: Configure kubeconfig
        run: |
          k3d kubeconfig get $K3D_CLUSTER_NAME > kubeconfig.yaml
          echo "KUBECONFIG=$PWD/kubeconfig.yaml" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Deploy MySQL
        run: |
          kubectl create namespace ecommerce || echo "Namespace already exists"
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/mysql-pvc.yaml
          kubectl apply -f k8s/mysql-deployment.yaml
          kubectl apply -f k8s/mysql-service.yaml
          kubectl wait --for=condition=ready pod -l app=mysql -n ecommerce --timeout=300s
          kubectl get pods -n ecommerce

      - name: Deploy Backend
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl wait --for=condition=ready pod -l app=ecommerce-backend -n ecommerce --timeout=180s
          kubectl get pods -n ecommerce

      - name: Test /products endpoint
        run: |
          BACKEND_POD=$(kubectl get pod -l app=ecommerce-backend -n ecommerce -o jsonpath='{.items[0].metadata.name}')
          RESPONSE=$(kubectl exec -n ecommerce $BACKEND_POD -- curl -s http://localhost:8080/ECommerce/products)
          echo "Products endpoint response: $RESPONSE"
          if [[ $RESPONSE == "[]" ]]; then
            echo "Error: /products endpoint returned empty list"
            exit 1
          fi
